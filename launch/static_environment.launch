<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <!--<arg name="recording" value="false"/>-->
    <arg name="debug" value="false"/>
  </include>
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_world" args="0 0 0 0 0 0 world map" />


  <node name="spawn_kinect" pkg="gazebo_ros" type="spawn_model" args="-file /home/yinglong/Documents/MotionPlanning/baxter/Baxter_with_sensor/gazebo/env/gazebo_models/kinect_ros/model-1_4.sdf -sdf -x -1.244454 -y 0.0 -z 2.148085 -Y -0.22 -P 0.189397 -model kinect_ros"/>
  <!-- Publish a static transform between the world and the camera -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_to_world" args="-1.24454 0.0 2.148085 -0.22 0.189397 0 world camera_link" />
  <!-- the camera optical frame will rotate w.r.t. the camera mounting frame (camera_link), by YPR = (-pi/2,0,-pi/2) -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_to_pcd" args="0 0 0 -1.5707963267948966 0 -1.5707963267948966 camera_link camera_optical_frame" />

  <node name="spawn_right_table" pkg="gazebo_ros" type="spawn_model" args="-file /home/yinglong/Documents/MotionPlanning/baxter/Baxter_with_sensor/gazebo/env/gazebo_models/MPNet_TableRight/model.sdf -sdf -model MPNet_TableRight"/>
  <node name="spawn_center_table" pkg="gazebo_ros" type="spawn_model" args="-file /home/yinglong/Documents/MotionPlanning/baxter/Baxter_with_sensor/gazebo/env/gazebo_models/MPNet_TableCenter/model.sdf -sdf -model MPNet_TableCenter"/>

  <include file="pcd_to_voxel.launch" />

</launch>
